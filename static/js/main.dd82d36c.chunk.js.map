{"version":3,"sources":["redux/contacts/contacts-actions.js","components/Navigation.js","img/default-avatar.svg","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Container/Container.js","components/Container/Container.module.css"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","editContactRequest","editContactSuccess","editContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterByName","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","name","btn","width","height","fontFamily","fontSize","lineHeight","fontStyle","border","borderRadius","backgroundColor","cursor","boxShadow","mapDispatchToProps","onLogout","authOperations","logOut","getUsername","defaultAvatar","src","alt","Button","type","onClick","variant","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","Container","fallback","path","getCurrentUser","items","createReducer","_","action","payload","map","contact","id","filter","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","error","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","console","log","data","message","logIn","getState","persistedToken","get","children","className","module","exports"],"mappings":"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","file":"static/js/main.dd82d36c.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const editContactRequest = createAction(\"contacts/editContactRequest\");\r\nexport const editContactSuccess = createAction(\"contacts/editContactSuccess\");\r\nexport const editContactError = createAction(\"contacts/editContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const filterByName = createAction(\"contacts/filterByName\");\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"var(--btn-color)\",\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Phonebook\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.b83fc38f.svg\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../redux/auth\";\r\nimport defaultAvatar from \"../img/default-avatar.svg\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n  btn: {\r\n    display: \"inline-block\",\r\n    width: 60,\r\n    height: \"auto\",\r\n    fontFamily: \"Ubuntu\",\r\n    fontSize: 16,\r\n    lineHeight: 1.2,\r\n    fontStyle: \"normal\",\r\n    fontWeight: 700,\r\n    color: \"black\",\r\n    border: \"2px solid var(--btn-color)\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"var(--btn-color)\",\r\n    padding: 5,\r\n    cursor: \"pointer\",\r\n    boxShadow: \"11px 10px 21px 0px rgba(34, 60, 80, 0.2)\",\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt={name} width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <Button\r\n      /* style={styles.btn} */ type=\"button\"\r\n      onClick={onLogout}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n    >\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  name: authSelectors.getUsername(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"var(--btn-color)\",\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Registration\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    borderBottom: \"1px solid var(--btn-color)\",\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport AppBar from \"./components/AppBar\";\nimport Container from \"./components/Container/Container\";\nimport { authOperations } from \"./redux/auth\";\nimport { connect } from \"react-redux\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              component={RegisterView}\n              redirectTo=\"/\"\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              component={LoginView}\n              redirectTo=\"/\"\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import initialContacts from \"../../components/contactArr.json\";\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  editContactSuccess,\r\n  editContactRequest,\r\n  editContactError,\r\n  filterByName,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, action) => action.payload,\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [editContactSuccess]: (state, { payload }) =>\r\n    state.map((contact) => (contact.id === payload.id ? payload : contact)),\r\n  [deleteContactSuccess]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterByName]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => false,\r\n  [fetchContactSuccess]: () => true,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => false,\r\n  [addContactSuccess]: () => true,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => false,\r\n  [deleteContactSuccess]: () => true,\r\n  [deleteContactError]: () => false,\r\n  [editContactRequest]: () => false,\r\n  [editContactSuccess]: () => false,\r\n  [editContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","// import logger from \"redux-logger\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { authReducer } from \"./auth\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"../src/main-styles/variables.css\";\nimport \"../src/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n    console.log(response);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  // якщо локал сторидж наповнений токеном, то є рендер\r\n  // те саме, що state.auth.token\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nconst getUsername = (state) => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"../Container/Container.module.css\";\r\nconst Container = ({ children }) => (\r\n  <>{<div className={styles.container}>{children}</div>}</>\r\n);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2wSpV\"};"],"sourceRoot":""}